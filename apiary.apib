FORMAT: 1A
HOST: http://www.google.com

# Bitbloq (v1.0)
Bitbloq is an Arduino IDE designed for children. It allows to program sketches and upload them directly onto the board. The code is constructed connecting blocks that contain programming statements such as if, for, etc. 

# Group Notes
Bitbloq related resources of the **Bitbloq API**

## Blocks [/v1.0/resource/bitbloq:Block]
### List all Blocks [GET]
+ Response 200 (application/json)

        [{
          "id": 1,
          "name": "aaa",
          "category": "bq"
        }, {
          "id": 2, "title": "Pick-up posters from post-office"
        }]

### Create a Block [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

## Note [/notes/{id}]
A single Note object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }

### Remove a Note [DELETE]
+ Response 204

## Compile Code [/v1.0/resource/bitbloq:Program]
API to compile code and get the results.

### Compile program [POST]

Version

Avaliable from version 0.12.0

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|arch|Architecture for which will be compiled code. For example: "arduino" |String||*|
|board|Name board for which will be compiled code|String||*|
|code|Source code to be compiled|String||*|


###Errors###
|Status|Error|Description|
|----|-----------|----|
|400  |bad_request |the json's parameters are incorrect o json incomplete|


+ Response 201 (application/json)
    
    + Header
            Location: https://silkroad/resources/bitbloq:Program/123

## Get compilation program [/v1.0/resource/bitbloq:Program/{id}]
API to compile code and get the results.

### Get information about compilation [GET]

Get information about compilation code.

Version

Avaliable from version 0.12.0

###Fields###
|Name|Description|Type|
|----|-----------|:--:|
|id  |Program compiled identifier|String|
|code|Soruce code compiled|String|
|type|Type of architecture for wich the code has been compiled|String|
|board|Name board for wich the code has been compiled|String|
|state|State of compilation (QUEUED, IN_PROGRESS, FINISHED, ERROR) |String|
|message|Message generated by the compiler |String|

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/json

+ Response 200 (application/json)

        [{
          "id": 123,
          "code": "void setup(){} void loop(){}",
          "type": "arduino",
          "board": "atmega328",
          "state": "FINISHED",
          "message" : "message of compilation"
        }]


### Get binary file [GET]

Get binary file generated in the compilation.

Version

Avaliable from version 0.12.0

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/octet-stream

+ Response 200 (application/octet-stream)

### Delete compilation information [DELETE]

Delete compilation information. The request Header must have "Accept" : "application/json".

Version

Avaliable from version 0.12.0

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/json

+ Response 204 (application/json)

### Delete bin file [DELETE]

Delete bin file. The request Header must have "Accept" : "application/octet-stream"

Version

Avaliable from version 0.12.0

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/octet-stream

+ Response 204 (application/json)
