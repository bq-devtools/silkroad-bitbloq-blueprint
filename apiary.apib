FORMAT: 1A
HOST: http://www.google.com

# Bitbloq (v1.0)
Bitbloq is an Arduino IDE designed for children. It allows to program sketches and upload them directly onto the board. The code is constructed connecting blocks that contain programming statements such as if, for, etc. 

# Group Project
Bitbloq projects are stored in reources-api

## Project metadata [/v1.0/resource/bitbloq:Project]
API to create projects

### Create project [POST]

###Version###

Avaliable from version 1.2.0

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|name|Name of the project|string||*|
|description|Description of the project|string|||
|tags|Tags for serahcing the project|array[string]|||
|createdAt|Creation date|timestamp|||
|updatedAt|Last upadte date|timestamp|||
|userId|Owner's id|string||*|


###Errors###
|Status|Error|Description|
|----|-----------|----|
|400  |bad_request |the json's parameters are incorrect o json incomplete|


+ Response 201 (application/json)
    
    + Header
            Location: https://silkroad/resources/bitbloq:Project/123

## Project [/v1.0/resource/bitbloq:Project/{id}]

API to manage all project info and resources 

### Modify project metadata [PUT]

The request headers must contain Content-Type: application/json

###Version###

Avaliable from version 1.2.0

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|name|Name of the project|string||*|
|description|Description of the project|string|||
|tags|Tags for serahcing the project|array[string]|||
|createdAt|Creation date|timestamp|||
|updatedAt|Last upadte date|timestamp|||
|userId|Owner's id|string||*|

###Errors###
|Status|Error|Description|
|----|-----------|----|
|400  |bad_request |the json's parameters are incorrect o json incomplete|


+ Response 201 (application/json)


### Add or modify project image [PUT]

The request headers must contain the content type of the image, e.g. Content-Type: image/png

###Version###

Avaliable from version 1.2.0

### Add or modify project xml descriptor [PUT]

The request headers must contain Content-Type: application/xml

###Version###

Avaliable from version 1.2.0

### Get project metadata [GET]

The request headers must contain Content-Type: application/json

###Version###

Avaliable from version 1.2.0

###Fields###
|Name|Description|Type|
|----|-----------|:--:|
|id  |Project identifier|String|
|name|Name of the project|string|
|description|Description of the project|string|
|tags|Tags for serahcing the project|array[string]|
|createdAt|Creation date|timestamp|
|updatedAt|Last upadte date|timestamp|
|userId|Owner's id|string|

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/json

+ Response 200 (application/json)

        [{
          "id": 123,
          "name": "project",
          "description": "project description",
          "tags": ["tag1", "tag2"],
          "createdAt": "12341234",
          "updatedAt" : "12345678",
          "userId": "aaaa"
        }]

### Get project image [GET]

The request headers must contain Accept: "content type of the image", e.g. Accept: image/png

###Version###

Avaliable from version 1.2.0

### Get project xml descriptor [GET]

The request headers must contain Accept: application/xml

###Version###

Avaliable from version 1.2.0

### Delete project metadata [DELETE]

The request headers must contain Accept: application/json

###Version###

Avaliable from version 1.2.0

### Delete project image [DELETE]

The request headers must contain Accept: "content type of the image", e.g. Accept: image/png

###Version###

Avaliable from version 1.2.0

### Delete project xml descriptor [DELETE]

The request headers must contain Accept: application/xml

###Version###

Avaliable from version 1.2.0

# Group Release
Bitbloq releases are stored in reources-api

## Release metadata [/v1.0/resource/bitbloq:Release]
API to create releases of bitbloq releases

### Create release [POST]

###Version###

Avaliable from version 1.2.0

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|name|Name of the release|string||*|
|description|Description of the release|string|||
|tags|Tags for serahcing the release|array[string]|||
|createdAt|Creation date|timestamp||*|
|updatedAt|Last upadte date|timestamp|||
|userId|Owner's id|string||*|
|projectId|Parent project of the release|string||*|


###Errors###
|Status|Error|Description|
|----|-----------|----|
|400  |bad_request |the json's parameters are incorrect o json incomplete|


+ Response 201 (application/json)
    
    + Header
            Location: https://silkroad/resources/bitbloq:Release/123

## release [/v1.0/resource/bitbloq:release/{id}]

API to manage all release info and resources 

### Modify release metadata [PUT]

The request headers must contain Content-Type: application/json

###Version###

Avaliable from version 1.2.0

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|name|Name of the release|string||*|
|description|Description of the release|string|||
|tags|Tags for serahcing the release|array[string]|||
|createdAt|Creation date|timestamp||*|
|updatedAt|Last upadte date|timestamp|||
|userId|Owner's id|string||*|
|projectId|Parent project of the release|string||*|

###Errors###
|Status|Error|Description|
|----|-----------|----|
|400  |bad_request |the json's parameters are incorrect o json incomplete|


+ Response 201 (application/json)


### Add or modify release image [PUT]

The request headers must contain the content type of the image, e.g. Content-Type: image/png

###Version###

Avaliable from version 1.2.0

### Add or modify release xml descriptor [PUT]

The request headers must contain Content-Type: application/xml

###Version###

Avaliable from version 1.2.0

### Get release metadata [GET]

The request headers must contain Content-Type: application/json

###Version###

Avaliable from version 1.2.0

###Fields###
|Name|Description|Type|
|----|-----------|:--:|
|id  |Release identifier|String|
|name|Name of the release|string|
|description|Description of the release|string|
|tags|Tags for serahcing the release|array[string]|
|createdAt|Creation date|timestamp|
|updatedAt|Last upadte date|timestamp|
|userId|Owner's id|string|
|projectId|Parent project of the release|string|

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/json

+ Response 200 (application/json)

        [{
          "id": 123,
          "name": "project",
          "description": "project description",
          "tags": ["tag1", "tag2"],
          "createdAt": "12341234",
          "updatedAt" : "12345678",
          "userId": "aaaa",
          "projectId": "qwer"
        }]

### Get release image [GET]

The request headers must contain Accept: "content type of the image", e.g. Accept: image/png

###Version###

Avaliable from version 1.2.0

### Get release xml descriptor [GET]

The request headers must contain Accept: application/xml

###Version###

Avaliable from version 1.2.0

### Delete release metadata [DELETE]

The request headers must contain Accept: application/json

###Version###

Avaliable from version 1.2.0

### Delete release image [DELETE]

The request headers must contain Accept: "content type of the image", e.g. Accept: image/png

###Version###

Avaliable from version 1.2.0

### Delete release xml descriptor [DELETE]

The request headers must contain Accept: application/xml

###Version###

Avaliable from version 1.2.0


# Group Program
Bitbloq programs compiled and stored in reources-api

## Program [/v1.0/resource/bitbloq:Program]
API to compile code and get the results.

### Compile program [POST]

###Version###

Avaliable from version 1.2.0


###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|arch|Architecture for which will be compiled code. For example: "arduino" |String||*|
|board|Name board for which will be compiled code|String||*|
|code|Source code to be compiled|String||*|


###Errors###
|Status|Error|Description|
|----|-----------|----|
|400  |bad_request |the json's parameters are incorrect o json incomplete|


+ Response 201 (application/json)
    
    + Header
            Location: https://silkroad/resources/bitbloq:Program/123

## Get compilation program [/v1.0/resource/bitbloq:Program/{id}]
API to compile code and get the results.

### Get information about compilation [GET]

Get information about compilation code.

###Version###

Avaliable from version 1.2.0

###Fields###
|Name|Description|Type|
|----|-----------|:--:|
|id  |Program compiled identifier|String|
|code|Soruce code compiled|String|
|type|Type of architecture for wich the code has been compiled|String|
|board|Name board for wich the code has been compiled|String|
|state|State of compilation (QUEUED, IN_PROGRESS, FINISHED, ERROR) |String|
|message|Message generated by the compiler |String|

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/json

+ Response 200 (application/json)

        [{
          "id": 123,
          "code": "void setup(){} void loop(){}",
          "type": "arduino",
          "board": "atmega328",
          "state": "FINISHED",
          "message" : "message of compilation"
        }]


### Get binary file [GET]

Get binary file generated in the compilation.

###Version###

Avaliable from version 1.2.0

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/octet-stream

+ Response 200 (application/octet-stream)

### Delete compilation information [DELETE]

Delete compilation information. The request Header must have "Accept" : "application/json".

###Version###

Avaliable from version 1.2.0

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/json

+ Response 204 (application/json)

### Delete bin file [DELETE]

Delete bin file. The request Header must have "Accept" : "application/octet-stream"

###Version###

Avaliable from version 1.2.0

+ Request
    + Headers

            Authorization : Bearer {token}   
            Accept: application/octet-stream

+ Response 204 (application/json)
